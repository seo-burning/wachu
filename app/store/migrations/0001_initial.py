# Generated by Django 2.2.3 on 2019-07-05 01:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Age',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Age')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='Primary_Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Primary Style')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Region Name')),
            ],
        ),
        migrations.CreateModel(
            name='Secondary_Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Secondary Style')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_updated', models.BooleanField(default=False)),
                ('insta_id', models.CharField(max_length=255, verbose_name='Instagram ID')),
                ('insta_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Instagram URL')),
                ('profile_image', models.URLField(blank=True, max_length=500, null=True, verbose_name='Instagram Profile Image')),
                ('name', models.CharField(max_length=255, verbose_name='Instagram Name')),
                ('follower', models.IntegerField(null=True, verbose_name='Instagram Follower')),
                ('following', models.IntegerField(null=True, verbose_name='Instagram Following')),
                ('post_num', models.IntegerField(null=True, verbose_name='Instagram Number of posts')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Instagram Description')),
                ('phone', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('facebook_url', models.URLField(blank=True, max_length=500, null=True)),
                ('shopee_url', models.URLField(blank=True, max_length=500, null=True)),
                ('current_ranking', models.IntegerField(null=True)),
                ('current_ranking_changed', models.IntegerField(null=True)),
                ('age', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.Age')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.Category')),
                ('primary_style', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.Primary_Style')),
                ('region', models.ManyToManyField(blank=True, related_name='regions_set', to='store.Region')),
                ('secondary_style', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.Secondary_Style')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tpo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Tpo')),
            ],
        ),
        migrations.CreateModel(
            name='StoreSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=25)),
                ('contact_status', models.CharField(choices=[('NONE', '연락안함'), ('DM', 'DM 보냄, 답장대기중'), ('CM', '연락중')], max_length=25)),
                ('content', models.TextField(blank=True, null=True, verbose_name='Survey Content')),
                ('reaction_rate', models.IntegerField(blank=True, choices=[(1, '매우 부정적'), (2, '부정적'), (3, '의견 없음'), (4, '긍정적'), (5, '매우 긍정적')], null=True)),
                ('store', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='store_survey', to='store.Store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('post_id', models.CharField(max_length=25)),
                ('post_type', models.CharField(choices=[('SP', 'Single Picture'), ('MP', 'Multiple Picture'), ('V', 'Video')], max_length=25, null=True)),
                ('post_url', models.URLField(blank=True, max_length=500, null=True)),
                ('post_taken_at_timestamp', models.IntegerField(null=True, verbose_name='Taken_at_timestamp')),
                ('post_description', models.TextField(blank=True, null=True, verbose_name='Post Description')),
                ('post_thumb_image', models.CharField(max_length=1024, null=True, verbose_name='Post Thumb Image')),
                ('video_source', models.CharField(max_length=1024, null=True, verbose_name='URL Source')),
                ('view_count', models.IntegerField(null=True, verbose_name='Video View Count')),
                ('post_like', models.IntegerField(null=True, verbose_name='Post Like')),
                ('post_comment', models.IntegerField(null=True, verbose_name='Post Comment')),
                ('post_score', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('ordering_keyword', models.IntegerField(default=True, null=True)),
                ('main_section_published', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='main_banner_post_set', to='product.MainSection')),
                ('sliding_section_published', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sliding_banner_post_set', to='product.SlidingBannerSection')),
                ('store', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='store_post_set', to='store.Store')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='store',
            name='tpo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.Tpo'),
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source', models.CharField(max_length=1024, null=True, verbose_name='URL Source')),
                ('source_thumb', models.CharField(max_length=1024, null=True, verbose_name='Thumb Small Link')),
                ('store_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_image_set', to='store.StorePost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StoreRanking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(db_index=True)),
                ('post_total_score', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('store_score', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('follower', models.IntegerField(null=True, verbose_name='Instagram Follower')),
                ('following', models.IntegerField(null=True, verbose_name='Instagram Following')),
                ('post_num', models.IntegerField(null=True, verbose_name='Instagram Number of posts')),
                ('ranking', models.IntegerField(null=True)),
                ('ranking_changed', models.IntegerField(null=True)),
                ('store', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='store_ranking_set', to='store.Store')),
            ],
            options={
                'unique_together': {('date', 'store')},
            },
        ),
    ]
